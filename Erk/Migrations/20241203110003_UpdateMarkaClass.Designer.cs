// <auto-generated />
using System;
using Erk.DTO.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Erk.Migrations
{
    [DbContext(typeof(ErkDbContext))]
    [Migration("20241203110003_UpdateMarkaClass")]
    partial class UpdateMarkaClass
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erk.DTO.Entities.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<string>("AdminAd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("AdminAktiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("AdminEPosta")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("AdminGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AdminSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("AdminUyelikTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("AdminID");

                    b.ToTable("tblAdmin");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Adres", b =>
                {
                    b.Property<int>("AdresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresID"));

                    b.Property<int>("AadresMusteriID")
                        .HasColumnType("int");

                    b.Property<int>("AdresIlceID")
                        .HasColumnType("int");

                    b.Property<string>("DetayliAdres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("AdresID");

                    b.HasIndex("AadresMusteriID");

                    b.HasIndex("AdresIlceID");

                    b.ToTable("tblAdres");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Anasayfa", b =>
                {
                    b.Property<int>("AnasayfaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnasayfaID"));

                    b.Property<string>("AnasayfaAciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("AnasayfaAciklamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnasayfaBaslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AnasayfaDurumu")
                        .HasColumnType("bit");

                    b.HasKey("AnasayfaID");

                    b.ToTable("tblAnasayfa");
                });

            modelBuilder.Entity("Erk.DTO.Entities.BizKimiz", b =>
                {
                    b.Property<int>("BizKimizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BizKimizID"));

                    b.Property<string>("BizKimizAciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("BizKimizAciklamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("BizKimizBaslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("BizKimizDurumu")
                        .HasColumnType("bit");

                    b.HasKey("BizKimizID");

                    b.ToTable("tblBizKimiz");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Favori", b =>
                {
                    b.Property<int>("FavoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriId"));

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("FavoriId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("UrunId");

                    b.ToTable("tblFavoriler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Hakkimizda", b =>
                {
                    b.Property<int>("HakkimizdaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HakkimizdaID"));

                    b.Property<string>("HakkimizdaAciklama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("HakkimizdaAciklamaDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HakkimizdaAciklamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("HakkimizdaBaslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HakkimizdaID");

                    b.ToTable("tblHakkimizda");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Il", b =>
                {
                    b.Property<int>("IlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlId"));

                    b.Property<string>("IlAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IlId");

                    b.ToTable("tblIller");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Ilce", b =>
                {
                    b.Property<int>("IlceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IlceId"));

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IlceId");

                    b.HasIndex("IlId");

                    b.ToTable("tblIceler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Iletisim", b =>
                {
                    b.Property<int>("IletisimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IletisimID"));

                    b.Property<string>("IletisimCepTelNo")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("IletisimDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("IletisimEmailAdresi")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("IletisimIsim")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("IletisimMesaj")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("IletisimMesajGonderimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IletisimSoyIsim")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IletisimID");

                    b.ToTable("tblIletisim");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KategoriDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("KategoriUstKategoriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("KategoriYuklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KategoriID");

                    b.ToTable("tblKategoriler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Marka", b =>
                {
                    b.Property<int>("MarkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkaID"));

                    b.Property<string>("MarkaAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("MarkaDurumu")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MarkaOlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarkaResim")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("MarkaID");

                    b.ToTable("tblMarkalar");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Musteri", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriID"));

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("MusteriAd")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("MusteriEPosta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MusteriSifre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MusteriSoyad")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MusteriID");

                    b.ToTable("tblMusteriler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.OdemeBilgisi", b =>
                {
                    b.Property<int>("OdemeBilgisiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeBilgisiID"));

                    b.Property<string>("OdemeBilgisiOdemeDurumu")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("OdemeBilgisiOdemeTuru")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OdemeBilgisiSiparisID")
                        .HasColumnType("int");

                    b.Property<decimal>("OdemeBilgisiTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OdemeBilgisiID");

                    b.HasIndex("OdemeBilgisiSiparisID");

                    b.ToTable("tblOdemeBilgileri");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Sepet", b =>
                {
                    b.Property<int>("SepetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetID"));

                    b.Property<bool>("SepetAktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("SepetMusteriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SepetOlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("SepetID");

                    b.HasIndex("SepetMusteriID");

                    b.ToTable("tblSepet");
                });

            modelBuilder.Entity("Erk.DTO.Entities.SepetDetay", b =>
                {
                    b.Property<int>("SepetDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetDetayID"));

                    b.Property<int>("SepetDetayAdet")
                        .HasColumnType("int");

                    b.Property<decimal>("SepetDetayBirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SepetDetaySepetID")
                        .HasColumnType("int");

                    b.Property<int>("SepetDetayUrunII")
                        .HasColumnType("int");

                    b.HasKey("SepetDetayID");

                    b.HasIndex("SepetDetaySepetID");

                    b.HasIndex("SepetDetayUrunII");

                    b.ToTable("tblSepetDetaylari");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Servislerimiz", b =>
                {
                    b.Property<int>("ServisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServisID"));

                    b.Property<string>("ServisAciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ServisBaslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("ServisDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("ServisResim")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("ServisYuklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ServisID");

                    b.ToTable("tblServisler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Siparis", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisID"));

                    b.Property<int?>("SiparisDurum")
                        .HasColumnType("int");

                    b.Property<int>("SiparisMusteriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisSiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SiparisToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SiparisID");

                    b.HasIndex("SiparisMusteriID");

                    b.ToTable("tblSiparisler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.SiparisDetay", b =>
                {
                    b.Property<int>("SiparisDetayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisDetayID"));

                    b.Property<int>("SiparisDetayAdet")
                        .HasColumnType("int");

                    b.Property<decimal>("SiparisDetayBirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SiparisDetaySiparisID")
                        .HasColumnType("int");

                    b.Property<int>("SiparisDetayUrunID")
                        .HasColumnType("int");

                    b.HasKey("SiparisDetayID");

                    b.HasIndex("SiparisDetaySiparisID");

                    b.HasIndex("SiparisDetayUrunID");

                    b.ToTable("tblSiparisDetaylari");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Stok", b =>
                {
                    b.Property<int>("StokID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StokID"));

                    b.Property<bool>("StokAktiflikDurumu")
                        .HasColumnType("bit");

                    b.Property<decimal>("StokFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StokGuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("StokKodu")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<double>("StokMiktari")
                        .HasColumnType("float");

                    b.Property<DateTime>("StokOlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("StokUrunID")
                        .HasColumnType("int");

                    b.HasKey("StokID");

                    b.HasIndex("StokUrunID");

                    b.ToTable("tblStok");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Urun", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"));

                    b.Property<string>("UrunAciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UrunAd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("UrunDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("UrunKategoriID")
                        .HasColumnType("int");

                    b.Property<int>("UrunMarkaID")
                        .HasColumnType("int");

                    b.Property<string>("UrunResim")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UrunYuklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("UrunID");

                    b.HasIndex("UrunKategoriID");

                    b.HasIndex("UrunMarkaID");

                    b.ToTable("tblUrunler");
                });

            modelBuilder.Entity("Erk.DTO.Entities.UrunResim", b =>
                {
                    b.Property<int>("UrunResimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunResimID"));

                    b.Property<DateTime>("UrunResimEklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrunResimResimYolu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UrunResimUrunID")
                        .HasColumnType("int");

                    b.Property<bool>("UrunResimVarsayilanMi")
                        .HasColumnType("bit");

                    b.HasKey("UrunResimID");

                    b.HasIndex("UrunResimUrunID");

                    b.ToTable("tblUrunResimleri");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Adres", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("AadresMusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erk.DTO.Entities.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("AdresIlceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilce");

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Favori", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erk.DTO.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Ilce", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Il", "Il")
                        .WithMany()
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Il");
                });

            modelBuilder.Entity("Erk.DTO.Entities.OdemeBilgisi", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("OdemeBilgisiSiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Sepet", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("SepetMusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Erk.DTO.Entities.SepetDetay", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Sepet", "Sepet")
                        .WithMany()
                        .HasForeignKey("SepetDetaySepetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erk.DTO.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("SepetDetayUrunII")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sepet");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Siparis", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Musteri", "Musteri")
                        .WithMany()
                        .HasForeignKey("SiparisMusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("Erk.DTO.Entities.SiparisDetay", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Siparis", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisDetaySiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erk.DTO.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("SiparisDetayUrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Stok", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("StokUrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Erk.DTO.Entities.Urun", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("UrunKategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Erk.DTO.Entities.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("UrunMarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Erk.DTO.Entities.UrunResim", b =>
                {
                    b.HasOne("Erk.DTO.Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunResimUrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urun");
                });
#pragma warning restore 612, 618
        }
    }
}
